library('janitor') #library bantuan untuk data exploration
library('lubridate') #library untuk parsing date and time
library('skimr') #summary dataframe
library('tidyverse')
library('ggplot2')
library('tidymodels')
library('rsample')
library('devtools')
library('dplyr')
library('recipes')
library('tidyr')
library('e1071')
library('caret')
library('workflows')
library('outliers')
library('shiny')
#Melakukan importing data csv
df_airbnb <- read.csv("D:\\Sem_5\\Praktikum_Data_Science\\Tugas_Akhir_Praktikum_Fixed\\NYC.csv.xls", header=TRUE, stringsAsFactors=FALSE)
head(df_airbnb)
#Data cleaning
#Cleaning missing value
df_airbnb <- df_airbnb %>%
distinct() %>%
clean_names() %>%
drop_na()
#Membuat subset yang lebih kecil sehingga lebih mudah untuk melihat data
airbnb_hood <- df_airbnb %>%
select(id, name, host_id, neighbourhood_group, neighbourhood, latitude, longitude, room_type, price, number_of_reviews)
airbnb_property <- df_airbnb %>%
select(id, name, host_id, host_name, neighbourhood_group, neighbourhood, price, number_of_reviews, calculated_host_listings_count)
#summary dari dataset
airbnb_hood %>%
group_by(neighbourhood_group) %>%
summarize(min_price = min(price), max_price = max(price), avg_price = mean(price))
#membersihkan harga rumah yang tidak masuk akal atau 0
airbnb_hood <- subset(airbnb_hood, price > 0)
airbnb_property <- subset(airbnb_property, price > 0)
df_airbnb_clean <- subset(df_airbnb, price > 0)
#membuat supervised learning
set.seed(123)
df_airbnb_split <- initial_split(df_airbnb_clean, prop = 0.8, strata = price)
df_airbnb_train <- training(df_airbnb_split)
df_airbnb_test <- testing(df_airbnb_split)
#membuat recipe
airbnb_recipe <- df_airbnb_train %>%
recipe() %>%
update_role(price, new_role = "outcome") %>%
update_role(number_of_reviews, minimum_nights, new_role = "predictor") %>%
update_role(host_id, new_role = "id") %>%
step_corr(all_predictors(), threshold = 0.9)
#membuat model
airbnb_model <- linear_reg() %>%
set_engine("lm") %>%
set_mode("regression")
#melakukan training
airbnb_workflow <- workflow() %>%
add_recipe(airbnb_recipe) %>%
add_model(airbnb_model)
#melakukan training
airbnb_workflow <- workflow() %>%
add_recipe(airbnb_recipe) %>%
add_model(airbnb_model)
airbnb_fit <- airbnb_workflow %>%
fit(data = df_airbnb_train)
#melakukan prediksi
airbnb_pred <- airbnb_fit %>%
predict(df_airbnb_test)
bind_cols(df_airbnb_test, airbnb_pred)
airbnb_pred
#melakukan analising data kembali
airbnb_hood %>%
group_by(neighbourhood_group, room_type) %>%
summarize(min_price = min(price), max_price = max(price), avg_price = mean(price))
#Mnngecek relasi dengan cara melakukan grouping neighborhood sehingga dapat melihat mengukur demands dari tiap neighborhood
np_airbnb_hood <- airbnb_hood %>%
group_by(neighbourhood_group) %>%
count(room_type)
head(np_airbnb_hood)
#Visualisasi data perbandingan properties dan daerah/hood
ggplot(np_airbnb_hood, aes(x = neighbourhood_group, y = n, fill = room_type)) +
geom_bar(position = "dodge", stat = "identity") +
theme_classic() +
labs(title = "Persebaran Daerah/Hood vs Bentuk Properties in NYC", x = "Hood", y = "Jumlah Properties") +
theme(plot.title = element_text(face = "bold"))
#Visualisasi data perbandingan daerah dengan harga di NYC
ggplot(airbnb_hood) +
geom_point(aes(x = neighbourhood_group, y = price, color = room_type)) +
theme_classic() +
labs(title = "Persebaran Daerah/Hood vs Harga in NYC", x = "Hood", y = "Harga") +
theme(plot.title = element_text(face = "bold"))
#Brooklyn
airbnb_Brooklyn <- airbnb_property %>%
select(neighbourhood_group, neighbourhood, calculated_host_listings_count, host_id) %>%
filter(neighbourhood_group == "Brooklyn")
ggplot(airbnb_Brooklyn, aes(x = calculated_host_listings_count, y = neighbourhood,fill = calculated_host_listings_count)) +
geom_bar(position = "dodge", stat = "identity") +
theme_classic() +
labs(title = "Airbnb Daerah Brooklyn vs Banyak daftar Host", x = "Daftar Host", y = "Hood") +
theme(plot.title = element_text(face = "bold"))
#Bronx
airbnb_Bronx <- airbnb_property %>%
select(neighbourhood_group, neighbourhood, calculated_host_listings_count, host_id) %>%
filter(neighbourhood_group == "Bronx")
ggplot(airbnb_Bronx, aes(x = calculated_host_listings_count, y = neighbourhood,fill = calculated_host_listings_count)) +
geom_bar(position = "dodge", stat = "identity") +
theme_classic() +
labs(title = "Airbnb Daerah Bronx vs Banyak daftar Host", x = "Daftar Host", y = "Hood") +
theme(plot.title = element_text(face = "bold"))
#Manhattan
airbnb_Manhattan <- airbnb_property %>%
select(neighbourhood_group, neighbourhood, calculated_host_listings_count, host_id) %>%
filter(neighbourhood_group == "Manhattan")
ggplot(airbnb_Manhattan, aes(x = calculated_host_listings_count, y = neighbourhood,fill = calculated_host_listings_count)) +
geom_bar(position = "dodge", stat = "identity") +
theme_classic() +
labs(title = "Airbnb Daerah Manhattan vs Banyak daftar Host", x = "Daftar Host", y = "Hood") +
theme(plot.title = element_text(face = "bold"))
#Queens
airbnb_Queens <- airbnb_property %>%
select(neighbourhood_group, neighbourhood, calculated_host_listings_count, host_id) %>%
filter(neighbourhood_group == "Queens")
ggplot(airbnb_Queens, aes(x = calculated_host_listings_count, y = neighbourhood,fill = calculated_host_listings_count)) +
geom_bar(position = "dodge", stat = "identity") +
theme_classic() +
labs(title = "Airbnb Daerah Queen vs Banyak daftar Host", x = "Daftar Host", y = "Hood") +
theme(plot.title = element_text(face = "bold"))
#Staten Island
airbnb_StatenIsland <- airbnb_property %>%
select(neighbourhood_group, neighbourhood, calculated_host_listings_count, host_id) %>%
filter(neighbourhood_group == "Staten Island")
ggplot(airbnb_StatenIsland, aes(x = calculated_host_listings_count, y = neighbourhood,fill = calculated_host_listings_count)) +
geom_bar(position = "dodge", stat = "identity") +
theme_classic() +
labs(title = "Airbnb Daerah Staten Island vs Banyak daftar Host", x = "Daftar Host", y = "Hood") +
theme(plot.title = element_text(face = "bold"))
#Melakukan analisis trend harga
airbnb_Activity <- df_airbnb %>%
select(host_name, host_id, price, number_of_reviews, calculated_host_listings_count, minimum_nights, room_type)
ggplot(airbnb_Activity, aes(x = minimum_nights, y = calculated_host_listings_count, fill = price)) +
geom_bar(position = "dodge", stat = "identity") +
theme_classic() +
labs(title = "Aktivitas visitor vs List Airbnb", x = "Penyewaan( 12 Bulan terakhir)", y = "listings") +
theme(plot.title = element_text(face = "bold"))
#Mengidentifikasi persewaan dalam jangka waktu pendek
ggplot(airbnb_Activity, aes(x = minimum_nights, y = calculated_host_listings_count, fill = number_of_reviews)) +
geom_bar(position = "dodge", stat = "identity") +
theme_classic() +
labs(title = "Rental Dengan Jangka Pendek", x = "Malam", y = "listings") +
theme(plot.title = element_text(face = "bold"))
#membuat supervised learning
#membuat data training dan data testing
set.seed(123)
df_airbnb_split <- initial_split(df_airbnb_clean, prop = 0.8, strata = "neighbourhood_group")
df_airbnb_train <- training(df_airbnb_split)
df_airbnb_test <- testing(df_airbnb_split)
#membuat model
airbnb_nb <- naiveBayes(neighbourhood_group ~ ., data = df_airbnb_train)
#melihat hasil prediksi
airbnb_nb %>%
predict(df_airbnb_test) %>%
bind_cols(df_airbnb_test) %>%
select(neighbourhood_group, .pred_class, everything()) %>%
head()
#melihat akurasi model
airbnb_nb %>%
predict(df_airbnb_test) %>%
bind_cols(df_airbnb_test) %>%
metrics(truth = neighbourhood_group, estimate = .pred_class)
#melihat akurasi model
airbnb_nb %>%
predict(df_airbnb_test) %>%
bind_cols(df_airbnb_test) %>%
metrics(truth = neighbourhood_group, estimate = .pred_class)
#melihat akurasi model
airbnb_nb %>%
predict(df_airbnb_test) %>%
bind_cols(df_airbnb_test) %>%
metrics(truth = neighbourhood_group, estimate = pred_class)
#melihat hasil prediksi
airbnb_nb %>%
predict(df_airbnb_test) %>%
bind_cols(df_airbnb_test) %>%
select(neighbourhood_group, .pred_class, everything()) %>%
head()
#membuat model
airbnb_nb <- naiveBayes(neighbourhood_group ~ ., data = df_airbnb_train)
#melakukan prediksi
airbnb_pred <- airbnb_fit %>%
predict(df_airbnb_test)
summary(airbnb_fit)
#melakukan prediksi
airbnb_pred <- airbnb_fit %>%
predict(df_airbnb_test)
airbnb_pred
#Visualisasi data perbandingan properties dan daerah/hood
ggplot(np_airbnb_hood, aes(x = neighbourhood_group, y = n, fill = room_type)) +
geom_bar(position = "dodge", stat = "identity") +
theme_classic() +
labs(title = "Persebaran Daerah/Hood vs Bentuk Properties in NYC", x = "Hood", y = "Jumlah Properties") +
theme(plot.title = element_text(face = "bold"))
#Visualisasi data perbandingan daerah dengan harga di NYC
ggplot(airbnb_hood) +
geom_point(aes(x = neighbourhood_group, y = price, color = room_type)) +
theme_classic() +
labs(title = "Persebaran Daerah/Hood vs Harga in NYC", x = "Hood", y = "Harga") +
theme(plot.title = element_text(face = "bold"))
#Brooklyn
airbnb_Brooklyn <- airbnb_property %>%
select(neighbourhood_group, neighbourhood, calculated_host_listings_count, host_id) %>%
filter(neighbourhood_group == "Brooklyn")
ggplot(airbnb_Brooklyn, aes(x = calculated_host_listings_count, y = neighbourhood,fill = calculated_host_listings_count)) +
geom_bar(position = "dodge", stat = "identity") +
theme_classic() +
labs(title = "Airbnb Daerah Brooklyn vs Banyak daftar Host", x = "Daftar Host", y = "Hood") +
theme(plot.title = element_text(face = "bold"))
#Bronx
airbnb_Bronx <- airbnb_property %>%
select(neighbourhood_group, neighbourhood, calculated_host_listings_count, host_id) %>%
filter(neighbourhood_group == "Bronx")
ggplot(airbnb_Bronx, aes(x = calculated_host_listings_count, y = neighbourhood,fill = calculated_host_listings_count)) +
geom_bar(position = "dodge", stat = "identity") +
theme_classic() +
labs(title = "Airbnb Daerah Bronx vs Banyak daftar Host", x = "Daftar Host", y = "Hood") +
theme(plot.title = element_text(face = "bold"))
#Manhattan
airbnb_Manhattan <- airbnb_property %>%
select(neighbourhood_group, neighbourhood, calculated_host_listings_count, host_id) %>%
filter(neighbourhood_group == "Manhattan")
ggplot(airbnb_Manhattan, aes(x = calculated_host_listings_count, y = neighbourhood,fill = calculated_host_listings_count)) +
geom_bar(position = "dodge", stat = "identity") +
theme_classic() +
labs(title = "Airbnb Daerah Manhattan vs Banyak daftar Host", x = "Daftar Host", y = "Hood") +
theme(plot.title = element_text(face = "bold"))
#Manhattan
airbnb_Manhattan <- airbnb_property %>%
select(neighbourhood_group, neighbourhood, calculated_host_listings_count, host_id) %>%
filter(neighbourhood_group == "Manhattan")
ggplot(airbnb_Manhattan, aes(x = calculated_host_listings_count, y = neighbourhood,fill = calculated_host_listings_count)) +
geom_bar(position = "dodge", stat = "identity") +
theme_classic() +
labs(title = "Airbnb Daerah Manhattan vs Banyak daftar Host", x = "Daftar Host", y = "Hood") +
theme(plot.title = element_text(face = "bold"))
ggplot(airbnb_Manhattan, aes(x = calculated_host_listings_count, y = neighbourhood,fill = calculated_host_listings_count)) +
geom_bar(position = "dodge", stat = "identity") +
theme_classic() +
labs(title = "Airbnb Daerah Manhattan vs Banyak daftar Host", x = "Daftar Host", y = "Hood") +
theme(plot.title = element_text(face = "bold"))
ggplot(airbnb_Manhattan, aes(x = calculated_host_listings_count, y = neighbourhood,fill = calculated_host_listings_count)) +
geom_bar(position = "dodge", stat = "identity") +
theme_classic() +
labs(title = "Airbnb Daerah Manhattan vs Banyak daftar Host", x = "Daftar Host", y = "Hood") +
theme(plot.title = element_text(face = "bold"))
#Queens
airbnb_Queens <- airbnb_property %>%
select(neighbourhood_group, neighbourhood, calculated_host_listings_count, host_id) %>%
filter(neighbourhood_group == "Queens")
ggplot(airbnb_Queens, aes(x = calculated_host_listings_count, y = neighbourhood,fill = calculated_host_listings_count)) +
geom_bar(position = "dodge", stat = "identity") +
theme_classic() +
labs(title = "Airbnb Daerah Queen vs Banyak daftar Host", x = "Daftar Host", y = "Hood") +
theme(plot.title = element_text(face = "bold"))
#Staten Island
airbnb_StatenIsland <- airbnb_property %>%
select(neighbourhood_group, neighbourhood, calculated_host_listings_count, host_id) %>%
filter(neighbourhood_group == "Staten Island")
ggplot(airbnb_StatenIsland, aes(x = calculated_host_listings_count, y = neighbourhood,fill = calculated_host_listings_count)) +
geom_bar(position = "dodge", stat = "identity") +
theme_classic() +
labs(title = "Airbnb Daerah Staten Island vs Banyak daftar Host", x = "Daftar Host", y = "Hood") +
theme(plot.title = element_text(face = "bold"))
#Melakukan analisis trend harga
airbnb_Activity <- df_airbnb %>%
select(host_name, host_id, price, number_of_reviews, calculated_host_listings_count, minimum_nights, room_type)
ggplot(airbnb_Activity, aes(x = minimum_nights, y = calculated_host_listings_count, fill = price)) +
geom_bar(position = "dodge", stat = "identity") +
theme_classic() +
labs(title = "Aktivitas visitor vs List Airbnb", x = "Penyewaan( 12 Bulan terakhir)", y = "listings") +
theme(plot.title = element_text(face = "bold"))
#Mengidentifikasi persewaan dalam jangka waktu pendek
ggplot(airbnb_Activity, aes(x = minimum_nights, y = calculated_host_listings_count, fill = number_of_reviews)) +
geom_bar(position = "dodge", stat = "identity") +
theme_classic() +
labs(title = "Rental Dengan Jangka Pendek", x = "Malam", y = "listings") +
theme(plot.title = element_text(face = "bold"))
airbnb_pred %>%
ggplot(aes(x = price, y = airbnb_pred)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, color = "red") +
labs(x = "Actual Price", y = "Predicted Price")
airbnb_pred %>%
ggplot(aes(x = df_airbnb_clean$price, y = airbnb_pred)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, color = "red") +
labs(x = "Actual Price", y = "Predicted Price")
airbnb_pred %>%
ggplot(aes(x = df_airbnb_clean$price, y = airbnb_pred$price)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, color = "red") +
labs(x = "Actual Price", y = "Predicted Price")
airbnb_pred %>%
ggplot(aes(x = df_airbnb_clean$price, y = airbnb_pred)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, color = "red") +
labs(x = "Actual Price", y = "Predicted Price")
airbnb_pred %>%
ggplot(aes(y = airbnb_pred)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, color = "red") +
labs(x = "Actual Price", y = "Predicted Price")
airbnb_pred
#melakukan analising data kembali
airbnb_hood %>%
group_by(neighbourhood_group, room_type) %>%
summarize(min_price = min(price), max_price = max(price), avg_price = mean(price))
library('lubridate') #library untuk parsing date and time
library('skimr') #summary dataframe
library('tidyverse')
library('ggplot2')
library('tidymodels')
library('rsample')
library('devtools')
library('dplyr')
library('recipes')
library('tidyr')
library('e1071')
library('caret')
library('workflows')
library('outliers')
library('shiny')
library('janitor') #library bantuan untuk data exploration
#Melakukan importing data csv
df_airbnb <- read.csv("D:\\Sem_5\\Praktikum_Data_Science\\Tugas_Akhir_Praktikum_Fixed\\NYC.csv.xls", header=TRUE, stringsAsFactors=FALSE)
#Melakukan importing data csv
df_airbnb <- read.csv("D:\\Sem_5\\Praktikum_Data_Science\\Tugas_Akhir_Praktikum_Fixed\\NYC.csv.xls", header=TRUE, stringsAsFactors=FALSE)
install.packages("tidyverse")
install.packages("devtools")
install.packages("cli")
install.packages("e1071")
install.packages("caret")
install.packages("rlang")
install.packages("outliers")
install.packages("rlang")
#Melakukan importing data csv
df_airbnb <- read.csv("D:\\Sem_5\\Praktikum_Data_Science\\Tugas_Akhir_Praktikum_Fixed\\NYC.csv.xls", header=TRUE, stringsAsFactors=FALSE)
#Melakukan importing data csv
df_airbnb <- read.csv("D:\\Sem_5\\Praktikum_Data_Science\\Tugas_Akhir_Praktikum_Fixed\\NYC.csv.xls", header=TRUE, stringsAsFactors=FALSE)
